[project]
name = "options-deep"
version = "0.1.0"
description = "This is the Options-Deep project, for stock data analysis and pattern searching"
readme = "README.md"
authors = [
    { name = "Jake Cukjati", email = "" }
]
requires-python = ">=3.13.5"
dependencies = [
    "sqlalchemy[mypy]>=2.0.43",
    "python-dotenv>=1.0.0",
    "alembic>=1.13.0",
    "faker>=30.0.0",
]

[dependency-groups]
dev = [
    "isort>=6.0.1",
    "mypy>=1.17.1",
    "ruff>=0.12.8",
    "types-requests>=2.32.4.20250809",
]

# Ruff configuration - unified linting and formatting
[tool.ruff]
target-version = "py313"
line-length = 88
exclude = [
    "migrations/",
    "venv/",
    ".venv/",
    ".git/",
    "__pycache__/",
    "*.pyc",
    "build/",
    "dist/",
]

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "N",   # pep8-naming
    "D",   # pydocstyle
    "ANN", # flake8-annotations
]
ignore = [
    "E501",   # line too long (handled by formatter)
    "B008",   # do not perform function calls in argument defaults
    "D100",   # missing docstring in public module
    "D104",   # missing docstring in public package
    "D107",   # missing docstring in __init__
    "ANN002", # missing type annotation for *args
    "ANN003", # missing type annotation for **kwargs
]

[tool.ruff.lint.per-file-ignores]
# Tests can have missing docstrings and type annotations
"tests/*" = ["D", "ANN"]
# Examples can be more relaxed
"src/cmd/examples/*" = ["D", "ANN", "T201"]  # Allow print statements
# Scripts can use print statements
"scripts/*" = ["T201"]
# __init__.py files can have unused imports
"**/__init__.py" = ["F401"]
# Migration files are often auto-generated
"**/migrations/*" = ["D", "ANN"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
docstring-code-format = true

# mypy configuration - type checking
[tool.mypy]
python_version = "3.13"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
no_implicit_reexport = true
warn_redundant_casts = true
warn_unused_ignores = true
show_error_codes = true
strict_optional = true
disallow_untyped_calls = false  # Start less strict, can be enabled later

# Per-module mypy configuration
[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false
disallow_incomplete_defs = false

[[tool.mypy.overrides]]
module = "src.cmd.examples.*"
disallow_untyped_defs = false
disallow_incomplete_defs = false

# isort configuration - import sorting
[tool.isort]
float_to_top = true
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["src"]
src_paths = ["src"]
known_third_party = ["fastapi", "pydantic", "sqlalchemy", "pytest", "requests"]
sections = ["FUTURE", "FIRSTPARTY",  "STDLIB", "THIRDPARTY",  "LOCALFOLDER"]
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
lines_between_sections = 1
force_sort_within_sections = true
